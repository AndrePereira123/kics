// Code generated from bicep.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type bicepLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var BicepLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func biceplexerLexerInit() {
	staticData := &BicepLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "", "'@'", "','", "'['", "']'", "'('", "')'", "'.'", "'|'", "':'",
		"'='", "'{'", "'}'", "'param'", "'var'", "'true'", "'false'", "'null'",
		"'object'", "'resource'", "'output'", "", "", "", "", "'string'", "'int'",
		"'bool'", "'if'", "'for'", "'in'", "'?'", "'>'", "'>='", "'<'", "'<='",
		"'=='", "'!='",
	}
	staticData.SymbolicNames = []string{
		"", "MULTILINE_STRING", "AT", "COMMA", "OBRACK", "CBRACK", "OPAR", "CPAR",
		"DOT", "PIPE", "COL", "ASSIGN", "OBRACE", "CBRACE", "PARAM", "VAR",
		"TRUE", "FALSE", "NULL", "OBJECT", "RESOURCE", "OUTPUT", "STRING_LEFT_PIECE",
		"STRING_MIDDLE_PIECE", "STRING_RIGHT_PIECE", "STRING_COMPLETE", "STRING",
		"INT", "BOOL", "IF", "FOR", "IN", "QMARK", "GT", "GTE", "LT", "LTE",
		"EQ", "NEQ", "IDENTIFIER", "NUMBER", "NL", "SPACES", "UNKNOWN", "SINGLE_LINE_COMMENT",
		"MULTI_LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"MULTILINE_STRING", "AT", "COMMA", "OBRACK", "CBRACK", "OPAR", "CPAR",
		"DOT", "PIPE", "COL", "ASSIGN", "OBRACE", "CBRACE", "PARAM", "VAR",
		"TRUE", "FALSE", "NULL", "OBJECT", "RESOURCE", "OUTPUT", "STRING_LEFT_PIECE",
		"STRING_MIDDLE_PIECE", "STRING_RIGHT_PIECE", "STRING_COMPLETE", "STRING",
		"INT", "BOOL", "IF", "FOR", "IN", "QMARK", "GT", "GTE", "LT", "LTE",
		"EQ", "NEQ", "IDENTIFIER", "NUMBER", "NL", "SPACES", "UNKNOWN", "SINGLE_LINE_COMMENT",
		"MULTI_LINE_COMMENT", "STRINGCHAR", "ESCAPE", "HEX",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 45, 345, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 5, 0, 103, 8, 0, 10, 0, 12,
		0, 106, 9, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1,
		3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1,
		9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1,
		19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 5, 21, 187, 8, 21, 10, 21, 12, 21, 190,
		9, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 5, 22, 197, 8, 22, 10, 22, 12,
		22, 200, 9, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 5, 23, 207, 8, 23, 10,
		23, 12, 23, 210, 9, 23, 1, 23, 1, 23, 1, 24, 1, 24, 5, 24, 216, 8, 24,
		10, 24, 12, 24, 219, 9, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1,
		30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35,
		1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 5,
		38, 269, 8, 38, 10, 38, 12, 38, 272, 9, 38, 1, 39, 4, 39, 275, 8, 39, 11,
		39, 12, 39, 276, 1, 39, 1, 39, 4, 39, 281, 8, 39, 11, 39, 12, 39, 282,
		3, 39, 285, 8, 39, 1, 40, 4, 40, 288, 8, 40, 11, 40, 12, 40, 289, 1, 41,
		4, 41, 293, 8, 41, 11, 41, 12, 41, 294, 1, 41, 1, 41, 1, 42, 1, 42, 1,
		43, 1, 43, 1, 43, 1, 43, 5, 43, 305, 8, 43, 10, 43, 12, 43, 308, 9, 43,
		1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 5, 44, 316, 8, 44, 10, 44, 12,
		44, 319, 9, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 3, 45,
		328, 8, 45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 4, 46, 336, 8, 46,
		11, 46, 12, 46, 337, 1, 46, 1, 46, 3, 46, 342, 8, 46, 1, 47, 1, 47, 2,
		104, 317, 0, 48, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17,
		9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
		18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53,
		27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71,
		36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89,
		45, 91, 0, 93, 0, 95, 0, 1, 0, 8, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0,
		48, 57, 65, 90, 95, 95, 97, 122, 1, 0, 48, 57, 2, 0, 10, 10, 13, 13, 2,
		0, 9, 9, 32, 32, 5, 0, 9, 10, 13, 13, 36, 36, 39, 39, 92, 92, 6, 0, 36,
		36, 39, 39, 92, 92, 110, 110, 114, 114, 116, 116, 3, 0, 48, 57, 65, 70,
		97, 102, 357, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0,
		7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0,
		0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0,
		0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0,
		0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1,
		0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45,
		1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0,
		53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0,
		0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0,
		0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0,
		0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1,
		0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 1, 97,
		1, 0, 0, 0, 3, 111, 1, 0, 0, 0, 5, 113, 1, 0, 0, 0, 7, 115, 1, 0, 0, 0,
		9, 117, 1, 0, 0, 0, 11, 119, 1, 0, 0, 0, 13, 121, 1, 0, 0, 0, 15, 123,
		1, 0, 0, 0, 17, 125, 1, 0, 0, 0, 19, 127, 1, 0, 0, 0, 21, 129, 1, 0, 0,
		0, 23, 131, 1, 0, 0, 0, 25, 133, 1, 0, 0, 0, 27, 135, 1, 0, 0, 0, 29, 141,
		1, 0, 0, 0, 31, 145, 1, 0, 0, 0, 33, 150, 1, 0, 0, 0, 35, 156, 1, 0, 0,
		0, 37, 161, 1, 0, 0, 0, 39, 168, 1, 0, 0, 0, 41, 177, 1, 0, 0, 0, 43, 184,
		1, 0, 0, 0, 45, 194, 1, 0, 0, 0, 47, 204, 1, 0, 0, 0, 49, 213, 1, 0, 0,
		0, 51, 222, 1, 0, 0, 0, 53, 229, 1, 0, 0, 0, 55, 233, 1, 0, 0, 0, 57, 238,
		1, 0, 0, 0, 59, 241, 1, 0, 0, 0, 61, 245, 1, 0, 0, 0, 63, 248, 1, 0, 0,
		0, 65, 250, 1, 0, 0, 0, 67, 252, 1, 0, 0, 0, 69, 255, 1, 0, 0, 0, 71, 257,
		1, 0, 0, 0, 73, 260, 1, 0, 0, 0, 75, 263, 1, 0, 0, 0, 77, 266, 1, 0, 0,
		0, 79, 274, 1, 0, 0, 0, 81, 287, 1, 0, 0, 0, 83, 292, 1, 0, 0, 0, 85, 298,
		1, 0, 0, 0, 87, 300, 1, 0, 0, 0, 89, 311, 1, 0, 0, 0, 91, 327, 1, 0, 0,
		0, 93, 329, 1, 0, 0, 0, 95, 343, 1, 0, 0, 0, 97, 98, 5, 39, 0, 0, 98, 99,
		5, 39, 0, 0, 99, 100, 5, 39, 0, 0, 100, 104, 1, 0, 0, 0, 101, 103, 9, 0,
		0, 0, 102, 101, 1, 0, 0, 0, 103, 106, 1, 0, 0, 0, 104, 105, 1, 0, 0, 0,
		104, 102, 1, 0, 0, 0, 105, 107, 1, 0, 0, 0, 106, 104, 1, 0, 0, 0, 107,
		108, 5, 39, 0, 0, 108, 109, 5, 39, 0, 0, 109, 110, 5, 39, 0, 0, 110, 2,
		1, 0, 0, 0, 111, 112, 5, 64, 0, 0, 112, 4, 1, 0, 0, 0, 113, 114, 5, 44,
		0, 0, 114, 6, 1, 0, 0, 0, 115, 116, 5, 91, 0, 0, 116, 8, 1, 0, 0, 0, 117,
		118, 5, 93, 0, 0, 118, 10, 1, 0, 0, 0, 119, 120, 5, 40, 0, 0, 120, 12,
		1, 0, 0, 0, 121, 122, 5, 41, 0, 0, 122, 14, 1, 0, 0, 0, 123, 124, 5, 46,
		0, 0, 124, 16, 1, 0, 0, 0, 125, 126, 5, 124, 0, 0, 126, 18, 1, 0, 0, 0,
		127, 128, 5, 58, 0, 0, 128, 20, 1, 0, 0, 0, 129, 130, 5, 61, 0, 0, 130,
		22, 1, 0, 0, 0, 131, 132, 5, 123, 0, 0, 132, 24, 1, 0, 0, 0, 133, 134,
		5, 125, 0, 0, 134, 26, 1, 0, 0, 0, 135, 136, 5, 112, 0, 0, 136, 137, 5,
		97, 0, 0, 137, 138, 5, 114, 0, 0, 138, 139, 5, 97, 0, 0, 139, 140, 5, 109,
		0, 0, 140, 28, 1, 0, 0, 0, 141, 142, 5, 118, 0, 0, 142, 143, 5, 97, 0,
		0, 143, 144, 5, 114, 0, 0, 144, 30, 1, 0, 0, 0, 145, 146, 5, 116, 0, 0,
		146, 147, 5, 114, 0, 0, 147, 148, 5, 117, 0, 0, 148, 149, 5, 101, 0, 0,
		149, 32, 1, 0, 0, 0, 150, 151, 5, 102, 0, 0, 151, 152, 5, 97, 0, 0, 152,
		153, 5, 108, 0, 0, 153, 154, 5, 115, 0, 0, 154, 155, 5, 101, 0, 0, 155,
		34, 1, 0, 0, 0, 156, 157, 5, 110, 0, 0, 157, 158, 5, 117, 0, 0, 158, 159,
		5, 108, 0, 0, 159, 160, 5, 108, 0, 0, 160, 36, 1, 0, 0, 0, 161, 162, 5,
		111, 0, 0, 162, 163, 5, 98, 0, 0, 163, 164, 5, 106, 0, 0, 164, 165, 5,
		101, 0, 0, 165, 166, 5, 99, 0, 0, 166, 167, 5, 116, 0, 0, 167, 38, 1, 0,
		0, 0, 168, 169, 5, 114, 0, 0, 169, 170, 5, 101, 0, 0, 170, 171, 5, 115,
		0, 0, 171, 172, 5, 111, 0, 0, 172, 173, 5, 117, 0, 0, 173, 174, 5, 114,
		0, 0, 174, 175, 5, 99, 0, 0, 175, 176, 5, 101, 0, 0, 176, 40, 1, 0, 0,
		0, 177, 178, 5, 111, 0, 0, 178, 179, 5, 117, 0, 0, 179, 180, 5, 116, 0,
		0, 180, 181, 5, 112, 0, 0, 181, 182, 5, 117, 0, 0, 182, 183, 5, 116, 0,
		0, 183, 42, 1, 0, 0, 0, 184, 188, 5, 39, 0, 0, 185, 187, 3, 91, 45, 0,
		186, 185, 1, 0, 0, 0, 187, 190, 1, 0, 0, 0, 188, 186, 1, 0, 0, 0, 188,
		189, 1, 0, 0, 0, 189, 191, 1, 0, 0, 0, 190, 188, 1, 0, 0, 0, 191, 192,
		5, 36, 0, 0, 192, 193, 5, 123, 0, 0, 193, 44, 1, 0, 0, 0, 194, 198, 5,
		125, 0, 0, 195, 197, 3, 91, 45, 0, 196, 195, 1, 0, 0, 0, 197, 200, 1, 0,
		0, 0, 198, 196, 1, 0, 0, 0, 198, 199, 1, 0, 0, 0, 199, 201, 1, 0, 0, 0,
		200, 198, 1, 0, 0, 0, 201, 202, 5, 36, 0, 0, 202, 203, 5, 123, 0, 0, 203,
		46, 1, 0, 0, 0, 204, 208, 5, 125, 0, 0, 205, 207, 3, 91, 45, 0, 206, 205,
		1, 0, 0, 0, 207, 210, 1, 0, 0, 0, 208, 206, 1, 0, 0, 0, 208, 209, 1, 0,
		0, 0, 209, 211, 1, 0, 0, 0, 210, 208, 1, 0, 0, 0, 211, 212, 5, 39, 0, 0,
		212, 48, 1, 0, 0, 0, 213, 217, 5, 39, 0, 0, 214, 216, 3, 91, 45, 0, 215,
		214, 1, 0, 0, 0, 216, 219, 1, 0, 0, 0, 217, 215, 1, 0, 0, 0, 217, 218,
		1, 0, 0, 0, 218, 220, 1, 0, 0, 0, 219, 217, 1, 0, 0, 0, 220, 221, 5, 39,
		0, 0, 221, 50, 1, 0, 0, 0, 222, 223, 5, 115, 0, 0, 223, 224, 5, 116, 0,
		0, 224, 225, 5, 114, 0, 0, 225, 226, 5, 105, 0, 0, 226, 227, 5, 110, 0,
		0, 227, 228, 5, 103, 0, 0, 228, 52, 1, 0, 0, 0, 229, 230, 5, 105, 0, 0,
		230, 231, 5, 110, 0, 0, 231, 232, 5, 116, 0, 0, 232, 54, 1, 0, 0, 0, 233,
		234, 5, 98, 0, 0, 234, 235, 5, 111, 0, 0, 235, 236, 5, 111, 0, 0, 236,
		237, 5, 108, 0, 0, 237, 56, 1, 0, 0, 0, 238, 239, 5, 105, 0, 0, 239, 240,
		5, 102, 0, 0, 240, 58, 1, 0, 0, 0, 241, 242, 5, 102, 0, 0, 242, 243, 5,
		111, 0, 0, 243, 244, 5, 114, 0, 0, 244, 60, 1, 0, 0, 0, 245, 246, 5, 105,
		0, 0, 246, 247, 5, 110, 0, 0, 247, 62, 1, 0, 0, 0, 248, 249, 5, 63, 0,
		0, 249, 64, 1, 0, 0, 0, 250, 251, 5, 62, 0, 0, 251, 66, 1, 0, 0, 0, 252,
		253, 5, 62, 0, 0, 253, 254, 5, 61, 0, 0, 254, 68, 1, 0, 0, 0, 255, 256,
		5, 60, 0, 0, 256, 70, 1, 0, 0, 0, 257, 258, 5, 60, 0, 0, 258, 259, 5, 61,
		0, 0, 259, 72, 1, 0, 0, 0, 260, 261, 5, 61, 0, 0, 261, 262, 5, 61, 0, 0,
		262, 74, 1, 0, 0, 0, 263, 264, 5, 33, 0, 0, 264, 265, 5, 61, 0, 0, 265,
		76, 1, 0, 0, 0, 266, 270, 7, 0, 0, 0, 267, 269, 7, 1, 0, 0, 268, 267, 1,
		0, 0, 0, 269, 272, 1, 0, 0, 0, 270, 268, 1, 0, 0, 0, 270, 271, 1, 0, 0,
		0, 271, 78, 1, 0, 0, 0, 272, 270, 1, 0, 0, 0, 273, 275, 7, 2, 0, 0, 274,
		273, 1, 0, 0, 0, 275, 276, 1, 0, 0, 0, 276, 274, 1, 0, 0, 0, 276, 277,
		1, 0, 0, 0, 277, 284, 1, 0, 0, 0, 278, 280, 5, 46, 0, 0, 279, 281, 7, 2,
		0, 0, 280, 279, 1, 0, 0, 0, 281, 282, 1, 0, 0, 0, 282, 280, 1, 0, 0, 0,
		282, 283, 1, 0, 0, 0, 283, 285, 1, 0, 0, 0, 284, 278, 1, 0, 0, 0, 284,
		285, 1, 0, 0, 0, 285, 80, 1, 0, 0, 0, 286, 288, 7, 3, 0, 0, 287, 286, 1,
		0, 0, 0, 288, 289, 1, 0, 0, 0, 289, 287, 1, 0, 0, 0, 289, 290, 1, 0, 0,
		0, 290, 82, 1, 0, 0, 0, 291, 293, 7, 4, 0, 0, 292, 291, 1, 0, 0, 0, 293,
		294, 1, 0, 0, 0, 294, 292, 1, 0, 0, 0, 294, 295, 1, 0, 0, 0, 295, 296,
		1, 0, 0, 0, 296, 297, 6, 41, 0, 0, 297, 84, 1, 0, 0, 0, 298, 299, 9, 0,
		0, 0, 299, 86, 1, 0, 0, 0, 300, 301, 5, 47, 0, 0, 301, 302, 5, 47, 0, 0,
		302, 306, 1, 0, 0, 0, 303, 305, 8, 3, 0, 0, 304, 303, 1, 0, 0, 0, 305,
		308, 1, 0, 0, 0, 306, 304, 1, 0, 0, 0, 306, 307, 1, 0, 0, 0, 307, 309,
		1, 0, 0, 0, 308, 306, 1, 0, 0, 0, 309, 310, 6, 43, 0, 0, 310, 88, 1, 0,
		0, 0, 311, 312, 5, 47, 0, 0, 312, 313, 5, 42, 0, 0, 313, 317, 1, 0, 0,
		0, 314, 316, 9, 0, 0, 0, 315, 314, 1, 0, 0, 0, 316, 319, 1, 0, 0, 0, 317,
		318, 1, 0, 0, 0, 317, 315, 1, 0, 0, 0, 318, 320, 1, 0, 0, 0, 319, 317,
		1, 0, 0, 0, 320, 321, 5, 42, 0, 0, 321, 322, 5, 47, 0, 0, 322, 323, 1,
		0, 0, 0, 323, 324, 6, 44, 0, 0, 324, 90, 1, 0, 0, 0, 325, 328, 8, 5, 0,
		0, 326, 328, 3, 93, 46, 0, 327, 325, 1, 0, 0, 0, 327, 326, 1, 0, 0, 0,
		328, 92, 1, 0, 0, 0, 329, 341, 5, 92, 0, 0, 330, 342, 7, 6, 0, 0, 331,
		332, 5, 117, 0, 0, 332, 333, 5, 123, 0, 0, 333, 335, 1, 0, 0, 0, 334, 336,
		3, 95, 47, 0, 335, 334, 1, 0, 0, 0, 336, 337, 1, 0, 0, 0, 337, 335, 1,
		0, 0, 0, 337, 338, 1, 0, 0, 0, 338, 339, 1, 0, 0, 0, 339, 340, 5, 125,
		0, 0, 340, 342, 1, 0, 0, 0, 341, 330, 1, 0, 0, 0, 341, 331, 1, 0, 0, 0,
		342, 94, 1, 0, 0, 0, 343, 344, 7, 7, 0, 0, 344, 96, 1, 0, 0, 0, 17, 0,
		104, 188, 198, 208, 217, 270, 276, 282, 284, 289, 294, 306, 317, 327, 337,
		341, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// bicepLexerInit initializes any static state used to implement bicepLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewbicepLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func BicepLexerInit() {
	staticData := &BicepLexerLexerStaticData
	staticData.once.Do(biceplexerLexerInit)
}

// NewbicepLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewbicepLexer(input antlr.CharStream) *bicepLexer {
	BicepLexerInit()
	l := new(bicepLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &BicepLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "bicep.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// bicepLexer tokens.
const (
	bicepLexerMULTILINE_STRING    = 1
	bicepLexerAT                  = 2
	bicepLexerCOMMA               = 3
	bicepLexerOBRACK              = 4
	bicepLexerCBRACK              = 5
	bicepLexerOPAR                = 6
	bicepLexerCPAR                = 7
	bicepLexerDOT                 = 8
	bicepLexerPIPE                = 9
	bicepLexerCOL                 = 10
	bicepLexerASSIGN              = 11
	bicepLexerOBRACE              = 12
	bicepLexerCBRACE              = 13
	bicepLexerPARAM               = 14
	bicepLexerVAR                 = 15
	bicepLexerTRUE                = 16
	bicepLexerFALSE               = 17
	bicepLexerNULL                = 18
	bicepLexerOBJECT              = 19
	bicepLexerRESOURCE            = 20
	bicepLexerOUTPUT              = 21
	bicepLexerSTRING_LEFT_PIECE   = 22
	bicepLexerSTRING_MIDDLE_PIECE = 23
	bicepLexerSTRING_RIGHT_PIECE  = 24
	bicepLexerSTRING_COMPLETE     = 25
	bicepLexerSTRING              = 26
	bicepLexerINT                 = 27
	bicepLexerBOOL                = 28
	bicepLexerIF                  = 29
	bicepLexerFOR                 = 30
	bicepLexerIN                  = 31
	bicepLexerQMARK               = 32
	bicepLexerGT                  = 33
	bicepLexerGTE                 = 34
	bicepLexerLT                  = 35
	bicepLexerLTE                 = 36
	bicepLexerEQ                  = 37
	bicepLexerNEQ                 = 38
	bicepLexerIDENTIFIER          = 39
	bicepLexerNUMBER              = 40
	bicepLexerNL                  = 41
	bicepLexerSPACES              = 42
	bicepLexerUNKNOWN             = 43
	bicepLexerSINGLE_LINE_COMMENT = 44
	bicepLexerMULTI_LINE_COMMENT  = 45
)
