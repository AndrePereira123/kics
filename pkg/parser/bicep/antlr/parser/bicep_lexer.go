// Code generated from bicep.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type bicepLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var BicepLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func biceplexerLexerInit() {
	staticData := &BicepLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "", "'@'", "','", "'['", "']'", "'('", "')'", "'.'", "'|'", "",
		"'='", "'{'", "'}'", "'param'", "'var'", "'true'", "'false'", "'null'",
		"'object'", "'resource'", "'output'", "'targetScope'", "'import'", "'with'",
		"'as'", "'metadata'", "'existing'", "", "", "", "", "'string'", "'int'",
		"'bool'", "'if'", "'for'", "'in'", "'?'", "'>'", "'>='", "'<'", "'<='",
		"'=='", "'!='",
	}
	staticData.SymbolicNames = []string{
		"", "MULTILINE_STRING", "AT", "COMMA", "OBRACK", "CBRACK", "OPAR", "CPAR",
		"DOT", "PIPE", "COL", "ASSIGN", "OBRACE", "CBRACE", "PARAM", "VAR",
		"TRUE", "FALSE", "NULL", "OBJECT", "RESOURCE", "OUTPUT", "TARGET_SCOPE",
		"IMPORT", "WITH", "AS", "METADATA", "EXISTING", "STRING_LEFT_PIECE",
		"STRING_MIDDLE_PIECE", "STRING_RIGHT_PIECE", "STRING_COMPLETE", "STRING",
		"INT", "BOOL", "IF", "FOR", "IN", "QMARK", "GT", "GTE", "LT", "LTE",
		"EQ", "NEQ", "IDENTIFIER", "NUMBER", "NL", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT",
		"SPACES", "UNKNOWN",
	}
	staticData.RuleNames = []string{
		"MULTILINE_STRING", "AT", "COMMA", "OBRACK", "CBRACK", "OPAR", "CPAR",
		"DOT", "PIPE", "COL", "ASSIGN", "OBRACE", "CBRACE", "PARAM", "VAR",
		"TRUE", "FALSE", "NULL", "OBJECT", "RESOURCE", "OUTPUT", "TARGET_SCOPE",
		"IMPORT", "WITH", "AS", "METADATA", "EXISTING", "STRING_LEFT_PIECE",
		"STRING_MIDDLE_PIECE", "STRING_RIGHT_PIECE", "STRING_COMPLETE", "STRING",
		"INT", "BOOL", "IF", "FOR", "IN", "QMARK", "GT", "GTE", "LT", "LTE",
		"EQ", "NEQ", "IDENTIFIER", "NUMBER", "NL", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT",
		"SPACES", "UNKNOWN", "STRINGCHAR", "ESCAPE", "HEX",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 51, 405, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 5, 0, 115, 8, 0,
		10, 0, 12, 0, 118, 9, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2,
		1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8,
		1, 9, 1, 9, 1, 9, 3, 9, 143, 8, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1,
		12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 27, 1, 27, 5, 27, 247, 8, 27, 10, 27, 12, 27, 250, 9, 27, 1, 27, 1,
		27, 1, 27, 1, 28, 1, 28, 5, 28, 257, 8, 28, 10, 28, 12, 28, 260, 9, 28,
		1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 5, 29, 267, 8, 29, 10, 29, 12, 29, 270,
		9, 29, 1, 29, 1, 29, 1, 30, 1, 30, 5, 30, 276, 8, 30, 10, 30, 12, 30, 279,
		9, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1,
		32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34,
		1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1,
		38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42,
		1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 5, 44, 329, 8, 44, 10,
		44, 12, 44, 332, 9, 44, 1, 45, 4, 45, 335, 8, 45, 11, 45, 12, 45, 336,
		1, 45, 1, 45, 4, 45, 341, 8, 45, 11, 45, 12, 45, 342, 3, 45, 345, 8, 45,
		1, 46, 4, 46, 348, 8, 46, 11, 46, 12, 46, 349, 1, 47, 1, 47, 1, 47, 1,
		47, 5, 47, 356, 8, 47, 10, 47, 12, 47, 359, 9, 47, 1, 47, 1, 47, 1, 48,
		1, 48, 1, 48, 1, 48, 5, 48, 367, 8, 48, 10, 48, 12, 48, 370, 9, 48, 1,
		48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 49, 4, 49, 378, 8, 49, 11, 49, 12, 49,
		379, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 3, 51, 388, 8, 51, 1, 52,
		1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 4, 52, 396, 8, 52, 11, 52, 12, 52, 397,
		1, 52, 1, 52, 3, 52, 402, 8, 52, 1, 53, 1, 53, 2, 116, 368, 0, 54, 1, 1,
		3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23,
		12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41,
		21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59,
		30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77,
		39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95,
		48, 97, 49, 99, 50, 101, 51, 103, 0, 105, 0, 107, 0, 1, 0, 8, 3, 0, 65,
		90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 1, 0, 48, 57,
		2, 0, 10, 10, 13, 13, 2, 0, 9, 9, 32, 32, 5, 0, 9, 10, 13, 13, 36, 36,
		39, 39, 92, 92, 6, 0, 36, 36, 39, 39, 92, 92, 110, 110, 114, 114, 116,
		116, 3, 0, 48, 57, 65, 70, 97, 102, 418, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0,
		0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0,
		0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1,
		0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27,
		1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0,
		35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0,
		0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0,
		0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0,
		0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1,
		0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73,
		1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0,
		81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0,
		0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0,
		0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 1, 109, 1,
		0, 0, 0, 3, 123, 1, 0, 0, 0, 5, 125, 1, 0, 0, 0, 7, 127, 1, 0, 0, 0, 9,
		129, 1, 0, 0, 0, 11, 131, 1, 0, 0, 0, 13, 133, 1, 0, 0, 0, 15, 135, 1,
		0, 0, 0, 17, 137, 1, 0, 0, 0, 19, 142, 1, 0, 0, 0, 21, 144, 1, 0, 0, 0,
		23, 146, 1, 0, 0, 0, 25, 148, 1, 0, 0, 0, 27, 150, 1, 0, 0, 0, 29, 156,
		1, 0, 0, 0, 31, 160, 1, 0, 0, 0, 33, 165, 1, 0, 0, 0, 35, 171, 1, 0, 0,
		0, 37, 176, 1, 0, 0, 0, 39, 183, 1, 0, 0, 0, 41, 192, 1, 0, 0, 0, 43, 199,
		1, 0, 0, 0, 45, 211, 1, 0, 0, 0, 47, 218, 1, 0, 0, 0, 49, 223, 1, 0, 0,
		0, 51, 226, 1, 0, 0, 0, 53, 235, 1, 0, 0, 0, 55, 244, 1, 0, 0, 0, 57, 254,
		1, 0, 0, 0, 59, 264, 1, 0, 0, 0, 61, 273, 1, 0, 0, 0, 63, 282, 1, 0, 0,
		0, 65, 289, 1, 0, 0, 0, 67, 293, 1, 0, 0, 0, 69, 298, 1, 0, 0, 0, 71, 301,
		1, 0, 0, 0, 73, 305, 1, 0, 0, 0, 75, 308, 1, 0, 0, 0, 77, 310, 1, 0, 0,
		0, 79, 312, 1, 0, 0, 0, 81, 315, 1, 0, 0, 0, 83, 317, 1, 0, 0, 0, 85, 320,
		1, 0, 0, 0, 87, 323, 1, 0, 0, 0, 89, 326, 1, 0, 0, 0, 91, 334, 1, 0, 0,
		0, 93, 347, 1, 0, 0, 0, 95, 351, 1, 0, 0, 0, 97, 362, 1, 0, 0, 0, 99, 377,
		1, 0, 0, 0, 101, 383, 1, 0, 0, 0, 103, 387, 1, 0, 0, 0, 105, 389, 1, 0,
		0, 0, 107, 403, 1, 0, 0, 0, 109, 110, 5, 39, 0, 0, 110, 111, 5, 39, 0,
		0, 111, 112, 5, 39, 0, 0, 112, 116, 1, 0, 0, 0, 113, 115, 9, 0, 0, 0, 114,
		113, 1, 0, 0, 0, 115, 118, 1, 0, 0, 0, 116, 117, 1, 0, 0, 0, 116, 114,
		1, 0, 0, 0, 117, 119, 1, 0, 0, 0, 118, 116, 1, 0, 0, 0, 119, 120, 5, 39,
		0, 0, 120, 121, 5, 39, 0, 0, 121, 122, 5, 39, 0, 0, 122, 2, 1, 0, 0, 0,
		123, 124, 5, 64, 0, 0, 124, 4, 1, 0, 0, 0, 125, 126, 5, 44, 0, 0, 126,
		6, 1, 0, 0, 0, 127, 128, 5, 91, 0, 0, 128, 8, 1, 0, 0, 0, 129, 130, 5,
		93, 0, 0, 130, 10, 1, 0, 0, 0, 131, 132, 5, 40, 0, 0, 132, 12, 1, 0, 0,
		0, 133, 134, 5, 41, 0, 0, 134, 14, 1, 0, 0, 0, 135, 136, 5, 46, 0, 0, 136,
		16, 1, 0, 0, 0, 137, 138, 5, 124, 0, 0, 138, 18, 1, 0, 0, 0, 139, 143,
		5, 58, 0, 0, 140, 141, 5, 58, 0, 0, 141, 143, 5, 58, 0, 0, 142, 139, 1,
		0, 0, 0, 142, 140, 1, 0, 0, 0, 143, 20, 1, 0, 0, 0, 144, 145, 5, 61, 0,
		0, 145, 22, 1, 0, 0, 0, 146, 147, 5, 123, 0, 0, 147, 24, 1, 0, 0, 0, 148,
		149, 5, 125, 0, 0, 149, 26, 1, 0, 0, 0, 150, 151, 5, 112, 0, 0, 151, 152,
		5, 97, 0, 0, 152, 153, 5, 114, 0, 0, 153, 154, 5, 97, 0, 0, 154, 155, 5,
		109, 0, 0, 155, 28, 1, 0, 0, 0, 156, 157, 5, 118, 0, 0, 157, 158, 5, 97,
		0, 0, 158, 159, 5, 114, 0, 0, 159, 30, 1, 0, 0, 0, 160, 161, 5, 116, 0,
		0, 161, 162, 5, 114, 0, 0, 162, 163, 5, 117, 0, 0, 163, 164, 5, 101, 0,
		0, 164, 32, 1, 0, 0, 0, 165, 166, 5, 102, 0, 0, 166, 167, 5, 97, 0, 0,
		167, 168, 5, 108, 0, 0, 168, 169, 5, 115, 0, 0, 169, 170, 5, 101, 0, 0,
		170, 34, 1, 0, 0, 0, 171, 172, 5, 110, 0, 0, 172, 173, 5, 117, 0, 0, 173,
		174, 5, 108, 0, 0, 174, 175, 5, 108, 0, 0, 175, 36, 1, 0, 0, 0, 176, 177,
		5, 111, 0, 0, 177, 178, 5, 98, 0, 0, 178, 179, 5, 106, 0, 0, 179, 180,
		5, 101, 0, 0, 180, 181, 5, 99, 0, 0, 181, 182, 5, 116, 0, 0, 182, 38, 1,
		0, 0, 0, 183, 184, 5, 114, 0, 0, 184, 185, 5, 101, 0, 0, 185, 186, 5, 115,
		0, 0, 186, 187, 5, 111, 0, 0, 187, 188, 5, 117, 0, 0, 188, 189, 5, 114,
		0, 0, 189, 190, 5, 99, 0, 0, 190, 191, 5, 101, 0, 0, 191, 40, 1, 0, 0,
		0, 192, 193, 5, 111, 0, 0, 193, 194, 5, 117, 0, 0, 194, 195, 5, 116, 0,
		0, 195, 196, 5, 112, 0, 0, 196, 197, 5, 117, 0, 0, 197, 198, 5, 116, 0,
		0, 198, 42, 1, 0, 0, 0, 199, 200, 5, 116, 0, 0, 200, 201, 5, 97, 0, 0,
		201, 202, 5, 114, 0, 0, 202, 203, 5, 103, 0, 0, 203, 204, 5, 101, 0, 0,
		204, 205, 5, 116, 0, 0, 205, 206, 5, 83, 0, 0, 206, 207, 5, 99, 0, 0, 207,
		208, 5, 111, 0, 0, 208, 209, 5, 112, 0, 0, 209, 210, 5, 101, 0, 0, 210,
		44, 1, 0, 0, 0, 211, 212, 5, 105, 0, 0, 212, 213, 5, 109, 0, 0, 213, 214,
		5, 112, 0, 0, 214, 215, 5, 111, 0, 0, 215, 216, 5, 114, 0, 0, 216, 217,
		5, 116, 0, 0, 217, 46, 1, 0, 0, 0, 218, 219, 5, 119, 0, 0, 219, 220, 5,
		105, 0, 0, 220, 221, 5, 116, 0, 0, 221, 222, 5, 104, 0, 0, 222, 48, 1,
		0, 0, 0, 223, 224, 5, 97, 0, 0, 224, 225, 5, 115, 0, 0, 225, 50, 1, 0,
		0, 0, 226, 227, 5, 109, 0, 0, 227, 228, 5, 101, 0, 0, 228, 229, 5, 116,
		0, 0, 229, 230, 5, 97, 0, 0, 230, 231, 5, 100, 0, 0, 231, 232, 5, 97, 0,
		0, 232, 233, 5, 116, 0, 0, 233, 234, 5, 97, 0, 0, 234, 52, 1, 0, 0, 0,
		235, 236, 5, 101, 0, 0, 236, 237, 5, 120, 0, 0, 237, 238, 5, 105, 0, 0,
		238, 239, 5, 115, 0, 0, 239, 240, 5, 116, 0, 0, 240, 241, 5, 105, 0, 0,
		241, 242, 5, 110, 0, 0, 242, 243, 5, 103, 0, 0, 243, 54, 1, 0, 0, 0, 244,
		248, 5, 39, 0, 0, 245, 247, 3, 103, 51, 0, 246, 245, 1, 0, 0, 0, 247, 250,
		1, 0, 0, 0, 248, 246, 1, 0, 0, 0, 248, 249, 1, 0, 0, 0, 249, 251, 1, 0,
		0, 0, 250, 248, 1, 0, 0, 0, 251, 252, 5, 36, 0, 0, 252, 253, 5, 123, 0,
		0, 253, 56, 1, 0, 0, 0, 254, 258, 5, 125, 0, 0, 255, 257, 3, 103, 51, 0,
		256, 255, 1, 0, 0, 0, 257, 260, 1, 0, 0, 0, 258, 256, 1, 0, 0, 0, 258,
		259, 1, 0, 0, 0, 259, 261, 1, 0, 0, 0, 260, 258, 1, 0, 0, 0, 261, 262,
		5, 36, 0, 0, 262, 263, 5, 123, 0, 0, 263, 58, 1, 0, 0, 0, 264, 268, 5,
		125, 0, 0, 265, 267, 3, 103, 51, 0, 266, 265, 1, 0, 0, 0, 267, 270, 1,
		0, 0, 0, 268, 266, 1, 0, 0, 0, 268, 269, 1, 0, 0, 0, 269, 271, 1, 0, 0,
		0, 270, 268, 1, 0, 0, 0, 271, 272, 5, 39, 0, 0, 272, 60, 1, 0, 0, 0, 273,
		277, 5, 39, 0, 0, 274, 276, 3, 103, 51, 0, 275, 274, 1, 0, 0, 0, 276, 279,
		1, 0, 0, 0, 277, 275, 1, 0, 0, 0, 277, 278, 1, 0, 0, 0, 278, 280, 1, 0,
		0, 0, 279, 277, 1, 0, 0, 0, 280, 281, 5, 39, 0, 0, 281, 62, 1, 0, 0, 0,
		282, 283, 5, 115, 0, 0, 283, 284, 5, 116, 0, 0, 284, 285, 5, 114, 0, 0,
		285, 286, 5, 105, 0, 0, 286, 287, 5, 110, 0, 0, 287, 288, 5, 103, 0, 0,
		288, 64, 1, 0, 0, 0, 289, 290, 5, 105, 0, 0, 290, 291, 5, 110, 0, 0, 291,
		292, 5, 116, 0, 0, 292, 66, 1, 0, 0, 0, 293, 294, 5, 98, 0, 0, 294, 295,
		5, 111, 0, 0, 295, 296, 5, 111, 0, 0, 296, 297, 5, 108, 0, 0, 297, 68,
		1, 0, 0, 0, 298, 299, 5, 105, 0, 0, 299, 300, 5, 102, 0, 0, 300, 70, 1,
		0, 0, 0, 301, 302, 5, 102, 0, 0, 302, 303, 5, 111, 0, 0, 303, 304, 5, 114,
		0, 0, 304, 72, 1, 0, 0, 0, 305, 306, 5, 105, 0, 0, 306, 307, 5, 110, 0,
		0, 307, 74, 1, 0, 0, 0, 308, 309, 5, 63, 0, 0, 309, 76, 1, 0, 0, 0, 310,
		311, 5, 62, 0, 0, 311, 78, 1, 0, 0, 0, 312, 313, 5, 62, 0, 0, 313, 314,
		5, 61, 0, 0, 314, 80, 1, 0, 0, 0, 315, 316, 5, 60, 0, 0, 316, 82, 1, 0,
		0, 0, 317, 318, 5, 60, 0, 0, 318, 319, 5, 61, 0, 0, 319, 84, 1, 0, 0, 0,
		320, 321, 5, 61, 0, 0, 321, 322, 5, 61, 0, 0, 322, 86, 1, 0, 0, 0, 323,
		324, 5, 33, 0, 0, 324, 325, 5, 61, 0, 0, 325, 88, 1, 0, 0, 0, 326, 330,
		7, 0, 0, 0, 327, 329, 7, 1, 0, 0, 328, 327, 1, 0, 0, 0, 329, 332, 1, 0,
		0, 0, 330, 328, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 331, 90, 1, 0, 0, 0,
		332, 330, 1, 0, 0, 0, 333, 335, 7, 2, 0, 0, 334, 333, 1, 0, 0, 0, 335,
		336, 1, 0, 0, 0, 336, 334, 1, 0, 0, 0, 336, 337, 1, 0, 0, 0, 337, 344,
		1, 0, 0, 0, 338, 340, 5, 46, 0, 0, 339, 341, 7, 2, 0, 0, 340, 339, 1, 0,
		0, 0, 341, 342, 1, 0, 0, 0, 342, 340, 1, 0, 0, 0, 342, 343, 1, 0, 0, 0,
		343, 345, 1, 0, 0, 0, 344, 338, 1, 0, 0, 0, 344, 345, 1, 0, 0, 0, 345,
		92, 1, 0, 0, 0, 346, 348, 7, 3, 0, 0, 347, 346, 1, 0, 0, 0, 348, 349, 1,
		0, 0, 0, 349, 347, 1, 0, 0, 0, 349, 350, 1, 0, 0, 0, 350, 94, 1, 0, 0,
		0, 351, 352, 5, 47, 0, 0, 352, 353, 5, 47, 0, 0, 353, 357, 1, 0, 0, 0,
		354, 356, 8, 3, 0, 0, 355, 354, 1, 0, 0, 0, 356, 359, 1, 0, 0, 0, 357,
		355, 1, 0, 0, 0, 357, 358, 1, 0, 0, 0, 358, 360, 1, 0, 0, 0, 359, 357,
		1, 0, 0, 0, 360, 361, 6, 47, 0, 0, 361, 96, 1, 0, 0, 0, 362, 363, 5, 47,
		0, 0, 363, 364, 5, 42, 0, 0, 364, 368, 1, 0, 0, 0, 365, 367, 9, 0, 0, 0,
		366, 365, 1, 0, 0, 0, 367, 370, 1, 0, 0, 0, 368, 369, 1, 0, 0, 0, 368,
		366, 1, 0, 0, 0, 369, 371, 1, 0, 0, 0, 370, 368, 1, 0, 0, 0, 371, 372,
		5, 42, 0, 0, 372, 373, 5, 47, 0, 0, 373, 374, 1, 0, 0, 0, 374, 375, 6,
		48, 0, 0, 375, 98, 1, 0, 0, 0, 376, 378, 7, 4, 0, 0, 377, 376, 1, 0, 0,
		0, 378, 379, 1, 0, 0, 0, 379, 377, 1, 0, 0, 0, 379, 380, 1, 0, 0, 0, 380,
		381, 1, 0, 0, 0, 381, 382, 6, 49, 0, 0, 382, 100, 1, 0, 0, 0, 383, 384,
		9, 0, 0, 0, 384, 102, 1, 0, 0, 0, 385, 388, 8, 5, 0, 0, 386, 388, 3, 105,
		52, 0, 387, 385, 1, 0, 0, 0, 387, 386, 1, 0, 0, 0, 388, 104, 1, 0, 0, 0,
		389, 401, 5, 92, 0, 0, 390, 402, 7, 6, 0, 0, 391, 392, 5, 117, 0, 0, 392,
		393, 5, 123, 0, 0, 393, 395, 1, 0, 0, 0, 394, 396, 3, 107, 53, 0, 395,
		394, 1, 0, 0, 0, 396, 397, 1, 0, 0, 0, 397, 395, 1, 0, 0, 0, 397, 398,
		1, 0, 0, 0, 398, 399, 1, 0, 0, 0, 399, 400, 5, 125, 0, 0, 400, 402, 1,
		0, 0, 0, 401, 390, 1, 0, 0, 0, 401, 391, 1, 0, 0, 0, 402, 106, 1, 0, 0,
		0, 403, 404, 7, 7, 0, 0, 404, 108, 1, 0, 0, 0, 18, 0, 116, 142, 248, 258,
		268, 277, 330, 336, 342, 344, 349, 357, 368, 379, 387, 397, 401, 1, 6,
		0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// bicepLexerInit initializes any static state used to implement bicepLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewbicepLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func BicepLexerInit() {
	staticData := &BicepLexerLexerStaticData
	staticData.once.Do(biceplexerLexerInit)
}

// NewbicepLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewbicepLexer(input antlr.CharStream) *bicepLexer {
	BicepLexerInit()
	l := new(bicepLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &BicepLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "bicep.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// bicepLexer tokens.
const (
	bicepLexerMULTILINE_STRING    = 1
	bicepLexerAT                  = 2
	bicepLexerCOMMA               = 3
	bicepLexerOBRACK              = 4
	bicepLexerCBRACK              = 5
	bicepLexerOPAR                = 6
	bicepLexerCPAR                = 7
	bicepLexerDOT                 = 8
	bicepLexerPIPE                = 9
	bicepLexerCOL                 = 10
	bicepLexerASSIGN              = 11
	bicepLexerOBRACE              = 12
	bicepLexerCBRACE              = 13
	bicepLexerPARAM               = 14
	bicepLexerVAR                 = 15
	bicepLexerTRUE                = 16
	bicepLexerFALSE               = 17
	bicepLexerNULL                = 18
	bicepLexerOBJECT              = 19
	bicepLexerRESOURCE            = 20
	bicepLexerOUTPUT              = 21
	bicepLexerTARGET_SCOPE        = 22
	bicepLexerIMPORT              = 23
	bicepLexerWITH                = 24
	bicepLexerAS                  = 25
	bicepLexerMETADATA            = 26
	bicepLexerEXISTING            = 27
	bicepLexerSTRING_LEFT_PIECE   = 28
	bicepLexerSTRING_MIDDLE_PIECE = 29
	bicepLexerSTRING_RIGHT_PIECE  = 30
	bicepLexerSTRING_COMPLETE     = 31
	bicepLexerSTRING              = 32
	bicepLexerINT                 = 33
	bicepLexerBOOL                = 34
	bicepLexerIF                  = 35
	bicepLexerFOR                 = 36
	bicepLexerIN                  = 37
	bicepLexerQMARK               = 38
	bicepLexerGT                  = 39
	bicepLexerGTE                 = 40
	bicepLexerLT                  = 41
	bicepLexerLTE                 = 42
	bicepLexerEQ                  = 43
	bicepLexerNEQ                 = 44
	bicepLexerIDENTIFIER          = 45
	bicepLexerNUMBER              = 46
	bicepLexerNL                  = 47
	bicepLexerSINGLE_LINE_COMMENT = 48
	bicepLexerMULTI_LINE_COMMENT  = 49
	bicepLexerSPACES              = 50
	bicepLexerUNKNOWN             = 51
)
